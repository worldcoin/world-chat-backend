name: CI

on:
  - pull_request

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features --

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --verbose

      - name: Build release
        run: cargo build --release --verbose

  test:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Start LocalStack
        run: |
          docker compose up -d
          # Wait for services to be ready
          sleep 5

      - name: Wait for LocalStack
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:4566/_localstack/health | jq -e '.services.s3 == "running"' && \
               curl -s http://localhost:4566/_localstack/health | jq -e '.services.dynamodb == "running"' && \
               curl -s http://localhost:4566/_localstack/health | jq -e '.services.sqs == "running"'; then
              echo "LocalStack services are ready!"
              break
            fi
            echo "Waiting for LocalStack... attempt $i/10"
            sleep 1
          done

      - name: Run tests
        run: cargo test -- --nocapture

      - name: Clean up
        run: docker compose down

  proto-check:
    name: Proto Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install buf
        uses: bufbuild/buf-setup-action@v1

      - name: Lint protos
        working-directory: ./notification-worker
        run: buf lint

      - name: Check breaking changes
        working-directory: ./notification-worker
        run: buf breaking --against buf.build/xmtp/proto:main

  deny:
    name: Cargo deny
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: EmbarkStudios/cargo-deny-action@v2
        with:
          command: check ${{ matrix.checks }}
          rust-version: stable
